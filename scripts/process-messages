#!/usr/bin/env python

## -- Python Setup -- ##
import os.path
import sys

PROJECT_ROOT = os.path.normpath(os.path.join(os.path.dirname(__file__), ".."))
sys.path.insert(0, PROJECT_ROOT)
sys.path.insert(0, os.path.join(PROJECT_ROOT, '..'))

## -- Django Setup -- ##
from django.core.management import setup_environ
from thialfi import settings
setup_environ(settings)

## -- Here comes the script -- ##
import datetime
from app.models import *

## Only resend last 1 day of messages
dt_from=datetime.datetime.now()-datetime.timedelta(days=1)
for message in Message.objects.filter(dt_received__gt = dt_from):
    if message.dt_acked:
        continue
    print "%s | %s | %s" % (message.dt_received, message.recipient.group.contact_primary.sms_number, message.sms_body)

    # If it hasn't yet been despatched do it now
    if not message.delivery_set.all():
        print " * Despatching message"
        message.despatch()
        continue

    # Update delivery statuses, fetch replies
    for delivery in message.delivery_set.all():
        if not message.dt_delivered:
            delivery.update_status()
            print " * %s->%s : %s" % (delivery.dt_despatched, delivery.contact.sms_number, delivery.status)
        if not message.dt_acked:
            delivery.get_replies()
            for reply in delivery.reply_set.all():
                print " < %s [%s] %s" % (reply.sender, reply.dt_received, reply.message)

    # See if it needs to be escalated
    message.perform_escalation()
